#!/bin/bash

tests=()

update=0

while [ $# -gt 1 ]; do
	case "$1" in
		--update-expected|-u)
			update=1
			shift
		;;
		--test|-t)
			shift
			tests+=($1)
			shift
		;;
	esac
done

if [ ${#tests[@]} -eq 0 ]; then
	tests=(parse)
fi

if [ -z "$1" ]; then
	echo "Usage: $0 [-u|--update-expected] [(-t|--test) <test-set>] <program>"
	exit 1
fi

program="$(realpath "$1")"

testdir="$(dirname "$0")"

total_passed=0
total_failed=0

pass() {
	echo -e "\r[\033[1;32mPASS\033[m]"
	((passed++))
	((total_passed++))
}

fail() {
	echo -e "\r[\033[1;31mFAIL\033[m]"
	((failed++))
	((total_failed++))
}

diff='git -c color.diff.old=green -c color.diff.new=red --no-pager diff -U1 --no-index --color --exit-code'

set -e

rm -rf test-output test-diff
mkdir test-output test-diff
for dir in $tests; do
	mkdir "test-output/$dir" "test-diff/$dir"
done
ln -sfT "$testdir/tests" tests

set +e

for dir in "${tests[@]}"; do

passed=0
failed=0

if [ -d "tests/$dir" ]; then

if [ -f "tests/$dir"-flags ]; then
	flags="$(<"tests/$dir"-flags)"
else
	flags=''
fi

for t in "tests/$dir"/*; do
	t="$dir/${t##*/}"
	echo -n "[....] $t"
	$program $flags "tests/$t" &> "test-output/$t"
	r=$?
	if [ $r != 0 ]; then
		fail
		echo "Program exited with non-zero status code ($r)"
	elif [ $update == 1 ]; then
		pass
		cp "test-output/$t" "$testdir/expected/$t"
	elif [ ! -f "$testdir/expected/$t" ]; then
		echo -e "\r[\033[1;34m????\033[m] $t - no expected output available, got:"
		cat "test-output/$t"
	elif $diff "$testdir/expected/$t" "test-output/$t" > "test-diff/$t.diff"; then
		pass
	else
		fail
		tail -n+5 test-diff/$t.diff
	fi
done

else

echo -n "[....] No such directory: tests/$dir"
fail

fi

if [ ${#tests[@]} -gt 1 ]; then
	if [ $failed -gt 0 ]; then
		echo -e "[\033[1;31m$failed $dir TEST(S) FAILED\033[m]\n";
	else
		echo -e "[\033[1;32mALL $passed $dir TESTS PASSED\033[m]\n";
	fi
fi

done

if [ $total_failed -gt 0 ]; then
	echo -e "[\033[1;31m$total_failed TEST(S) FAILED\033[m]";
	exit 1
else
	echo -e "[\033[1;32mALL $total_passed TESTS PASSED\033[m]";
	exit 0
fi
